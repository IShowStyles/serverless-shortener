{
  "version": 3,
  "sources": ["../../../src/common/exceptions/all.exceptions.ts", "../../../src/common/exceptions/httpExceptions.ts"],
  "sourcesContent": ["import {HttpException, HttpStatusCode,} from './httpExceptions'\n\nexport class BadRequestException extends HttpException {\n  constructor(description = 'Bad Request', validationErrors = []) {\n    super('BAD REQUEST', HttpStatusCode.BAD_REQUEST, description, validationErrors);\n  }\n}\n\nexport class UnauthorizedException\n    extends HttpException {\n  constructor(description = 'Unauthorized') {\n    super('UNAUTHORIZED', HttpStatusCode.UNAUTHORIZED, description);\n  }\n}\n\nexport class ForbiddenException extends HttpException {\n  constructor(description = 'Forbidden') {\n    super('FORBIDDEN', HttpStatusCode.FORBIDDEN, description);\n  }\n}\n\nexport class ConflictException extends HttpException {\n  constructor(description = 'Conflict') {\n    super('CONFLICT', HttpStatusCode.CONFLICT, description);\n  }\n}\n\nexport class InternalServerErrorException extends HttpException {\n  constructor(description = 'Internal Server Error') {\n    super('INTERNAL SERVER ERROR', HttpStatusCode.INTERNAL_SERVER, description);\n  }\n}\n\nexport class MethodNotAllowedException extends HttpException {\n  constructor(description = 'Method Not Allowed') {\n    super('METHOD NOT ALLOWRD', HttpStatusCode.METHOD_NOT_ALLOWED, description);\n  }\n}\n\nexport class NotFoundException extends HttpException {\n  constructor(description = 'Not Found') {\n    super('NOT FOUND', HttpStatusCode.NOT_FOUND, description);\n  }\n}\n\nexport class RequestTimeoutException extends HttpException {\n  constructor(description = 'Request Timeout') {\n    super('REQUEST TIMEOUT', HttpStatusCode.REQUEST_TIMEOUT, description);\n  }\n}", "class HttpException extends Error {\n  name: string;\n  statusCode: number;\n  validationErrors?: any;\n\n  constructor(name: string, statusCode: number, description: string, validationErrors?: any) {\n    super(description);\n    this.name = name;\n    this.statusCode = statusCode;\n    this.validationErrors = validationErrors;\n  }\n}\n\nenum HttpStatusCode {\n  OK = 200,\n  CREATED = 201,\n  ACCEPTED = 202,\n  NO_CONTENT = 204,\n  BAD_REQUEST = 400,\n  NOT_FOUND = 404,\n  FORBIDDEN = 403,\n  UNAUTHORIZED = 401,\n  METHOD_NOT_ALLOWED = 405,\n  REQUEST_TIMEOUT = 408,\n  CONFLICT = 409,\n  INTERNAL_SERVER = 500,\n}\n\nexport { HttpException, HttpStatusCode }"],
  "mappings": "wiBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,yBAAAE,EAAA,sBAAAC,EAAA,uBAAAC,EAAA,iCAAAC,EAAA,8BAAAC,EAAA,sBAAAC,EAAA,4BAAAC,EAAA,0BAAAC,IAAA,eAAAC,EAAAV,GCAA,IAAMW,EAAN,cAA4B,KAAM,CAKhC,YAAYC,EAAcC,EAAoBC,EAAqBC,EAAwB,CACzF,MAAMD,CAAW,EALnBE,EAAA,aACAA,EAAA,mBACAA,EAAA,yBAIE,KAAK,KAAOJ,EACZ,KAAK,WAAaC,EAClB,KAAK,iBAAmBE,CAC1B,CACF,EDTO,IAAME,EAAN,cAAkCC,CAAc,CACrD,YAAYC,EAAc,cAAeC,EAAmB,CAAC,EAAG,CAC9D,MAAM,kBAA2CD,EAAaC,CAAgB,CAChF,CACF,EAEaC,EAAN,cACKH,CAAc,CACxB,YAAYC,EAAc,eAAgB,CACxC,MAAM,mBAA6CA,CAAW,CAChE,CACF,EAEaG,EAAN,cAAiCJ,CAAc,CACpD,YAAYC,EAAc,YAAa,CACrC,MAAM,gBAAuCA,CAAW,CAC1D,CACF,EAEaI,EAAN,cAAgCL,CAAc,CACnD,YAAYC,EAAc,WAAY,CACpC,MAAM,eAAqCA,CAAW,CACxD,CACF,EAEaK,EAAN,cAA2CN,CAAc,CAC9D,YAAYC,EAAc,wBAAyB,CACjD,MAAM,4BAAyDA,CAAW,CAC5E,CACF,EAEaM,EAAN,cAAwCP,CAAc,CAC3D,YAAYC,EAAc,qBAAsB,CAC9C,MAAM,yBAAyDA,CAAW,CAC5E,CACF,EAEaO,EAAN,cAAgCR,CAAc,CACnD,YAAYC,EAAc,YAAa,CACrC,MAAM,gBAAuCA,CAAW,CAC1D,CACF,EAEaQ,EAAN,cAAsCT,CAAc,CACzD,YAAYC,EAAc,kBAAmB,CAC3C,MAAM,sBAAmDA,CAAW,CACtE,CACF",
  "names": ["all_exceptions_exports", "__export", "BadRequestException", "ConflictException", "ForbiddenException", "InternalServerErrorException", "MethodNotAllowedException", "NotFoundException", "RequestTimeoutException", "UnauthorizedException", "__toCommonJS", "HttpException", "name", "statusCode", "description", "validationErrors", "__publicField", "BadRequestException", "HttpException", "description", "validationErrors", "UnauthorizedException", "ForbiddenException", "ConflictException", "InternalServerErrorException", "MethodNotAllowedException", "NotFoundException", "RequestTimeoutException"]
}
